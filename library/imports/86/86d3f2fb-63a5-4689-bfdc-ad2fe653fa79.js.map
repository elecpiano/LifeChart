{"version":3,"sources":["../../../../assets/Script/assets/Script/MainViewController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["import GlobalData from \"./Global\";\nimport LifeChartController from \"./LifeChartController\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class MainViewController extends cc.Component {\n\n    //#region Property\n\n    @property(cc.Node)\n    compareMenu: cc.Node = null;\n\n    @property(cc.Node)\n    AddFavoriteButton: cc.Node = null;\n\n    @property(cc.Prefab)\n    LifeChartPrefab:cc.Prefab = null;\n\n    @property(cc.ScrollView)\n    ScrollView: cc.ScrollView = null;\n    @property(cc.Node)\n    ItemsPanel: cc.Node = null;\n\n    LifeChartNodes = new Array<cc.Node>();\n\n    COLOR_NORMAL = \"#ffffff\";\n    COLOR_HIGHLIGHT = \"#ffb53a\";\n\n    UserData = \"\";\n    UserDataArr = new Array<string>();\n\n    GlobalData:GlobalData = null;\n\n    //#endregion\n\n    //#region Lifecycle\n\n    onLoad () {\n        this.compareMenu.on(cc.Node.EventType.TOUCH_START, \n            (e)=>{\n                e.stopPropagationImmediate();\n            },this.compareMenu);\n        this.compareMenu.active = false;\n        // this.AddFavoriteButton.active = false;\n\n        let globalNode = cc.director.getScene().getChildByName('GlobalNode');\n        this.GlobalData = globalNode.getComponent(GlobalData);\n\n        if (this.GlobalData.Compare) {\n            this.GlobalData.Compare = false;\n            // console.log(\"xxx CompareParam : \" + this.CompareParam);\n        }\n    }\n\n    start () {\n        // console.log(\"xxx @start : \" + this.GlobalData.ParamList);\n\n        this.node.runAction(cc.sequence(\n            cc.delayTime(0.1),\n            cc.callFunc(()=>this.DoThingsAfterProgress())\n        ));\n    }\n\n    DoThingsAfterProgress(){\n        this.EnsureUserDataAccess();\n        this.UserData = this.GetUserData();\n        this.UserDataArr = this.UserData.split(\";\");\n        // this.SetFavoriteButton();\n        for (let i = 0; i < this.GlobalData.ParamList.length; i++) {\n            this.AddLifeChart(this.GlobalData.ParamList[i]);\n        }\n    }\n\n    // update (dt) {}\n\n    //#endregion\n\n    //#region Life Chart\n\n    AddLifeChart(param:string){\n        let node = cc.instantiate(this.LifeChartPrefab);\n        let controller = node.getComponent(LifeChartController);\n        controller.mainView = this;\n\n        this.LifeChartNodes.push(node);\n        this.ItemsPanel.addChild(node);\n        node.x = 0;\n        node.y = 0;\n\n        let unsaved = this.TagUnsaved(param);\n        controller.Calculate(param, unsaved);\n    }\n\n    TagUnsaved(param:string) : boolean {\n        let unsaved = true;\n        for (let i = 0; i < this.UserDataArr.length; i++) {\n            if (param == this.UserDataArr[i]) {\n                unsaved = false;\n                break;\n            }\n        }\n\n        return unsaved;\n    }\n\n    RemoveLifeChart(chart:LifeChartController){\n        let idx = 0;\n        while (idx < this.LifeChartNodes.length) {\n            let node = this.LifeChartNodes[idx] \n            if (node == chart.node) {\n                this.LifeChartNodes.splice(idx,1);\n                this.ItemsPanel.removeChild(node);\n                this.GlobalData.ParamList.splice(idx,1);\n            }\n            idx++;\n        }\n    }\n\n    //#endregion\n\n    //#region Favotie\n\n    SetFavoriteButtonVisibility(){\n        if (this.GlobalData.ParamList.length == 1) {\n            let param = this.GlobalData.ParamList[0];\n            let exists = false;\n            for (let i = 0; i < this.UserDataArr.length; i++) {\n                if (param == this.UserDataArr[i]) {\n                    exists = true;\n                    break;\n                }\n            }\n            if (!exists) {\n                this.AddFavoriteButton.active = true;\n            }\n        }\n    }\n\n    AddFavorite(){\n        // console.log(\"xxx @AddFavorite - \" + this.GlobalData.ParamList);\n        for (let i = 0; i < this.GlobalData.ParamList.length; i++) {\n            let param = this.GlobalData.ParamList[i];\n\n            let exists = false;\n            for (let i = 0; i < this.UserDataArr.length; i++) {\n                if (param == this.UserDataArr[i]) {\n                    exists = true;\n                    break;\n                }\n            }\n\n            if (!exists) {\n                this.UserDataArr.push(param);\n                this.UserData += \";\" + param;\n                this.SaveUserData();\n            }\n        }\n\n        let idx = 0;\n        while (idx < this.LifeChartNodes.length) {\n            let node = this.LifeChartNodes[idx];\n            let controller = node.getComponent(LifeChartController);\n            controller.SetSaved();\n            idx++;\n        }\n    }\n\n    //#endregion\n\n    //#region Navigation\n\n    GoHome(){\n        cc.director.loadScene(\"InputView\");\n    }\n\n    CompareInput(){\n        this.GlobalData.Compare = true;\n        // this.GlobalData.CompareParam = \"\";\n        cc.director.loadScene(\"InputView\");\n    }\n\n    GoList(){\n        cc.director.loadScene(\"ListView\");\n    }\n\n    CompareList(){\n        this.GlobalData.Compare = true;\n        // this.GlobalData.CompareParam = \"\";\n        cc.director.loadScene(\"ListView\");\n    }\n\n    //#endregion\n\n    //#region Compare\n\n    ShowCompareMenu(){\n        this.compareMenu.active = true;\n    }\n\n    HideCompareMenu(){\n        this.compareMenu.active = false;\n    }\n\n    //#endregion\n\n    //#region WX Data API\n\n    EnsureUserDataAccess(){\n        // if (cc.sys.platform === cc.sys.WECHAT_GAME) {\n        // }\n        let fs = wx.getFileSystemManager();\n        let data = null;\n        try {\n            data = fs.readFileSync(`${wx.env.USER_DATA_PATH}/userdata.txt`, 'utf8');        \n        }catch(error){\n        }\n\n        if (data == null) {\n            fs.writeFileSync(`${wx.env.USER_DATA_PATH}/userdata.txt`, 'initial', 'utf8');\n        }\n    }\n\n    SaveUserData(){\n        let str = this.UserData;\n\n        let fs = wx.getFileSystemManager();\n        fs.writeFileSync(`${wx.env.USER_DATA_PATH}/userdata.txt`, str, 'utf8');\n        console.log(\"xxx save user data : \" + str);\n    }\n\n    GetUserData():string{\n        let fs = wx.getFileSystemManager();\n        let data = null;\n        try {\n            data = fs.readFileSync(`${wx.env.USER_DATA_PATH}/userdata.txt`, 'utf8');        \n        }catch(error){\n        }\n\n        console.log(\"xxx get user data : \" + data);\n\n        return data;\n    }\n\n    //#endregion\n\n}\n"]}